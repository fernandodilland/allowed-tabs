html {
	box-sizing: border-box;
}
*,
*:before,
*:after {
	box-sizing: inherit;
}

body {
	font-family: lato;
	font-size: .8em;
	color: #ffffff;
	min-width: 16em;
	margin: .1em .75em;
	background-color: #202020;
}

/* Custom header */

.header {
	background-color: #FFDF01;
	color: black;
	width: 200px;
	height: 5px;
	display: table-cell;
    vertical-align: middle;
}


/* Custom switch */

.switch {
	position: relative;
	display: inline-block;
	width: 50px;
	height: 25px;
}

.switch input {
	opacity: 0;
	width: 0;
	height: 0;
}

.slider {
	position: absolute;
	cursor: pointer;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	background-color: rgb(126, 126, 126);
	-webkit-transition: .4s;
	transition: .3s;
}

.slider:before {
	position: absolute;
	content: "";
	height: 19px;
	width: 19px;
	left: 4px;
	bottom: 2.8px;
	background-color: #202020;
	-webkit-transition: .2s;
	transition: .2s;
}

input:checked + .slider {
	background-color: #FFDF01;
}

input:focus + .slider {
	box-shadow: 0 0 1px #FFDF01;
}

input:checked + .slider:before {
	-webkit-transform: translateX(23px);
	-ms-transform: translateX(23px);
	transform: translateX(23px);
}

  /* Rounded sliders */
.slider.round {
	border-radius: 34px;
}

.slider.round:before {
	border-radius: 50%;
}

.text_custom { 
	top: 100px;
}

  /* Align center verically */

.parent{
    display: table;
}
.specs{
    display: table-cell;
    vertical-align: middle;
    padding-left: 0px;
}

.specs2{
    display: table-cell;
    vertical-align: middle;
    padding-left: 5px;
}


[type="text"],
[type="number"] {
	display: block;
	width: 100%;
	margin-bottom: .5em;
	padding: .25em 0.125em 0.1em;
}

#options {
	margin-bottom: .5em;
}

#options label {
	margin-bottom: .75em;
}

#options label:after {
	content: "";
	display: block;
	margin-bottom: .75em;
}

.container {
	display: none;
	border-top-left-radius: 0;
}

#info:checked ~ .container {
	display: inline-block;
}

#info:checked + label {
	border-bottom-left-radius: 0;
	border-bottom-right-radius: 0;
}

#developer {
	color:#a2a2a2;
}

.isDependedOnByNextOption:not(:checked) + label + input,
.isDependedOnByNextOption:not(:checked) + label + input + label {
	opacity: .4;
}

#info {
	position: fixed;
	top: -2em;
}

#info + label,
.container {
	background: #eee;
	color:#202020;
	border-radius: .4em;
	padding: .4em;
}

h1 {
	font-size: 1.1em;
}

#status {
	color: gray;
	transition: opacity .1s ease 0s;
}

#status.notice {
	color: #FFDF01;
}

#status.invisible {
	opacity: 65%;
	transition-delay: 2s;
}

.hidden { display: none; }